import { Router } from "express";
import {{Model}} from "../{{location}}/{{Model}}.js";
import { Flash } from "../bin/constants.js";
const {{route}} = Router();

{{route}}.get("/", async (req, res) => {
  try {
    const {{route}} = await {{Model}}.all();
    return res.render("{{route}}/index", { {{route}} });
  } catch (e) {}
});

{{route}}.get("/new", async (req, res) => {
  try {
    const {{model}} = new {{Model}}();
    return res.render("{{route}}/new", { {{model}} });
  } catch (e) {
    req.flash(Flash.ERROR, e.message);
    return res.redirect("/{{route}}");
  }
});

{{route}}.post("/new", async (req, res) => {
  try {
    const {{model}} = new {{Model}}(req.body);
    await {{model}}.save();
    req.flash(Flash.SUCCESS, "{{Model}} has been added");
    return res.redirect(`/{{route}}`);
  } catch (e) {
    req.flash(Flash.ERROR, e.message);
    return res.redirect("{{route}}/new");
  }
});

{{route}}.get("/edit/:id", async (req, res) => {
  try {
    const {{model}} = await {{Model}}.find(req.params.id);
    return res.render("{{route}}/edit", { {{model}} });
  } catch (e) {
    req.flash(Flash.ERROR, e.message);
  }
});

{{route}}.post("/edit/:id", async (req, res) => {
  try {
    const {{model}} = new {{Model}}({ id: req.params.id, ...req.body });
    await {{model}}.save();
    req.flash(Flash.SUCCESS, "{{Model}} has been updated");
    return res.redirect(`/{{route}}`);
  } catch (e) {
    req.flash(Flash.ERROR, e.message);
    return res.redirect(`/{{route}}/edit/${req.params.id}`);
  }
});

{{route}}.post("/delete/:id", async (req, res) => {
  try {
    await {{Model}}.delete(req.params.id);
    req.flash(Flash.SUCCESS, "{{Model}} has been deleted");
    return res.redirect("/{{route}}");
  } catch (e) {
    req.flash(Flash.ERROR, e.message);
  }
});

{{route}}.get("/:id", async (req, res) => {
  try {
    const {{model}} = await {{Model}}.find(req.params.id);
    return res.render("{{route}}/{{model}}", { {{model}} });
  } catch (e) {
    req.flash(Flash.ERROR, e.message);
  }
});

export default {{route}};
